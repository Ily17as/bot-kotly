from aiogram import Router
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from app.database.models import (
    add_master,
    list_available_masters,
    take_request,
    decline_request,
    complete_request,
    pay_commission,
)

router = Router()

# 3.1 –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –º–∞—Å—Ç–µ—Ä–∞
@router.message(Command("register_master"))
async def cmd_register_master(message: Message):
    user = message.from_user
    await add_master(user.id, user.username or "")
    await message.answer("‚úÖ –í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ –º–∞—Å—Ç–µ—Ä –∏ –≥–æ—Ç–æ–≤—ã –∫ –Ω–æ–≤—ã–º –∑–∞—è–≤–∫–∞–º!")

# 3.2 Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∑–∞—è–≤–∫–∏
def make_request_kb(request_id: int):
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üîß –í–∑—è—Ç—å –≤ —Ä–∞–±–æ—Ç—É", callback_data=f"take:{request_id}"),
            InlineKeyboardButton(text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å",     callback_data=f"decline:{request_id}")
        ]
    ])

# 3.3 –ö–æ–ª–±—ç–∫ ¬´–í–∑—è—Ç—å –≤ —Ä–∞–±–æ—Ç—É¬ª
@router.callback_query(lambda c: c.data and c.data.startswith("take:"))
async def cb_take_request(query: CallbackQuery):
    _, req_id = query.data.split(":")
    master_id = query.from_user.id
    await take_request(int(req_id), master_id)
    # –¥–æ—Å—Ç–∞—ë–º –ø–æ–ª–Ω—ã–π –∞–¥—Ä–µ—Å –∏–∑ –ë–î, –∑–¥–µ—Å—å —É–ø—Ä–æ—â—ë–Ω–Ω–æ:
    # full_address = await get_request_address(req_id)
    full_address = " ‚Äî —Ç—É—Ç –±—É–¥–µ—Ç –∞–¥—Ä–µ—Å –∫–ª–∏–µ–Ω—Ç–∞"
    await query.bot.send_message(
        chat_id=master_id,
        text=f"‚úÖ –ó–∞—è–≤–∫–∞ #{req_id} –ø—Ä–∏–Ω—è—Ç–∞!\nüìç –ê–¥—Ä–µ—Å –∫–ª–∏–µ–Ω—Ç–∞: {full_address}"
    )
    await query.message.edit_reply_markup()  # —É–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫–∏

# 3.4 –ö–æ–ª–±—ç–∫ ¬´–û—Ç–∫–ª–æ–Ω–∏—Ç—å¬ª
@router.callback_query(lambda c: c.data and c.data.startswith("decline:"))
async def cb_decline_request(query: CallbackQuery):
    _, req_id = query.data.split(":")
    master_id = query.from_user.id

    await decline_request(int(req_id), master_id)
    await query.answer("‚ùå –í—ã –æ—Ç–∫–ª–æ–Ω–∏–ª–∏ –∑–∞—è–≤–∫—É, –æ–Ω–∞ –≤–Ω–æ–≤—å –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –¥–ª—è –¥—Ä—É–≥–∏—Ö –º–∞—Å—Ç–µ—Ä–æ–≤.")

# 3.5 –ö–æ–ª–±—ç–∫ ¬´–í—ã–ø–æ–ª–Ω–µ–Ω–æ¬ª (–±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω —Å–ª–µ–¥—É—é—â–∏–º–∏ —à–∞–≥–∞–º–∏)
@router.callback_query(lambda c: c.data and c.data.startswith("done:"))
async def cb_done_request(query: CallbackQuery):
    _, req_id = query.data.split(":")
    master_id = query.from_user.id

    await complete_request(int(req_id), master_id)
    await query.message.answer("üîî –ó–∞—è–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–ª–∞—Ç–∏—Ç–µ –∫–æ–º–∏—Å—Å–∏—é.")
    await query.message.edit_reply_markup()  # —É–±—Ä–∞—Ç—å —Å—Ç–∞—Ä—ã–µ –∫–Ω–æ–ø–∫–∏

# 3.6 –ö–æ–ª–±—ç–∫ ¬´–û–ø–ª–∞—Ç–∏—Ç—å –∫–æ–º–∏—Å—Å–∏—é¬ª (–±—É–¥–µ—Ç –ø–æ–∑–∂–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –ø–ª–∞—Ç—ë–∂)
@router.callback_query(lambda c: c.data and c.data.startswith("pay:"))
async def cb_pay_commission(query: CallbackQuery):
    master_id = query.from_user.id
    await pay_commission(master_id)
    await query.message.answer("üí≥ –ö–æ–º–∏—Å—Å–∏—è –æ–ø–ª–∞—á–µ–Ω–∞, –≤—ã –º–æ–∂–µ—Ç–µ –±—Ä–∞—Ç—å –Ω–æ–≤—ã–µ –∑–∞—è–≤–∫–∏.")
    await query.message.edit_reply_markup()
