from aiogram import Router, F
from aiogram.types import CallbackQuery, Message
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State

from app.database.models import add_review, get_request_by_id
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

router = Router()


class ReviewFSM(StatesGroup):
    waiting_comment = State()


def make_rating_kb(request_id: int) -> InlineKeyboardMarkup:
    # 5,4,3,2,1 ‚Üí —á—Ç–æ–±—ã –∫—Ä–∞—Å–∏–≤–æ–π –¥—É–≥–æ–π
    buttons = [
        InlineKeyboardButton(text="‚≠êÔ∏è"*i, callback_data=f"rate:{request_id}:{i}")
        for i in (5,4,3,2,1)
    ]
    return InlineKeyboardMarkup(inline_keyboard=[buttons])


def skip_comment_kb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[[InlineKeyboardButton(text="–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å ‚û°Ô∏è", callback_data="skip_comment")]]
    )

# --- —à–∞–≥ 1. –∫–ª–∏–µ–Ω—Ç –Ω–∞–∂–∞–ª –∑–≤—ë–∑–¥—ã -----------------------------------
@router.callback_query(lambda c: c.data and c.data.startswith("rate:"))
async def cb_rate(query: CallbackQuery, state: FSMContext):
    _, req_id, rating = query.data.split(":")
    request_id, rating = int(req_id), int(rating)

    req = await get_request_by_id(request_id)
    if not req or req[10] != "done" or req[1] != query.from_user.id:
        return await query.answer("‚õî –û—Ü–µ–Ω–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.", show_alert=True)

    await state.update_data(request_id=request_id,
                            master_id=req[11],
                            rating=rating)

    await query.message.edit_reply_markup()
    await query.message.answer(
        "‚úçÔ∏è –•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç–∑—ã–≤?\n"
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ ¬´–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å ‚û°Ô∏è¬ª.",
        reply_markup=skip_comment_kb(),
    )
    await state.set_state(ReviewFSM.waiting_comment)
    await query.answer("–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ü–µ–Ω–∫—É!")


# --- —à–∞–≥ 2–∞. –∫–ª–∏–µ–Ω—Ç –æ—Ç–ø—Ä–∞–≤–∏–ª –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π ---------------------------
@router.message(ReviewFSM.waiting_comment, F.text)
async def review_comment(message: Message, state: FSMContext):
    data = await state.get_data()
    await add_review(
        data["request_id"],
        data["master_id"],
        message.from_user.id,
        data["rating"],
        message.text.strip(),
    )
    await message.answer("üôè –°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤! –û–Ω —É–∂–µ —É –º–∞—Å—Ç–µ—Ä–∞.")
    await state.clear()


# --- —à–∞–≥ 2b. –∫–ª–∏–µ–Ω—Ç –Ω–∞–∂–∞–ª ¬´–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å¬ª -----------------------------
@router.callback_query(F.data == "skip_comment")
async def skip_comment(query: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    await add_review(
        data["request_id"],
        data["master_id"],
        query.from_user.id,
        data["rating"],
        None,
    )
    await query.message.edit_reply_markup()
    await query.message.answer("–°–ø–∞—Å–∏–±–æ! –û—Ü–µ–Ω–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.")
    await state.clear()
    await query.answer()