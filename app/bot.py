import logging
import asyncio
import os
from aiogram import Bot, Dispatcher, Router
from aiogram.enums import ParseMode
from aiogram.filters import Command
from app.config import BOT_TOKEN
from app.database.database import init_db
from app.database.models import add_user, list_users
from app.handlers.client_requests import router as request_router
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, Message
from app.middlewares.error_handler import ErrorHandlerMiddleware
from app.utils.logger import setup_logger

logger = logging.getLogger(__name__)
setup_logger()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=BOT_TOKEN)
bot.parse_mode = ParseMode.HTML

dp = Dispatcher()
main_router = Router()
dp.include_router(main_router)
dp.include_router(request_router)  # FSM-–∑–∞—è–≤–∫–∏
dp.message.middleware(ErrorHandlerMiddleware())

# –ö–æ–º–∞–Ω–¥–∞ /start
@main_router.message(Command("start"))
async def start_handler(message: Message):
    await add_user(message.from_user.id, message.from_user.username or "")

    # –ö–Ω–æ–ø–∫–∏
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üìã –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞")],
            [KeyboardButton(text="üìÑ –ú–æ–∏ –∑–∞—è–≤–∫–∏")]
        ],
        resize_keyboard=True
    )

    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –¢—ã –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É üëã\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ:",
        reply_markup=keyboard
    )


# –¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –∫–æ–Ω—Å–æ–ª—å
async def debug_users():
    users = await list_users()
    for u in users:
        print(f"ID: {u[0]}, Username: {u[1]}")

# –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫
async def main():
    await init_db()
    await bot.delete_webhook(drop_pending_updates=True)  # –£–¥–∞–ª—è–µ–º webhook
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ SQLite –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")
    await debug_users()
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
